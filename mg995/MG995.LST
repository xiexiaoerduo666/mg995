C51 COMPILER V9.00   MG995                                                                 01/26/2017 13:12:07 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MG995
OBJECT MODULE PLACED IN MG995.OBJ
COMPILER INVOKED BY: F:\keilc51\C51\BIN\C51.EXE MG995.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          
   3          sbit PWMOUT = P0^0;
   4           
   5          unsigned char HighRH = 0;
   6          unsigned char HighRL = 0;
   7          unsigned char LowRH = 0;
   8          unsigned char LowRL = 0;
   9          void ConfigPWM(unsigned int fr, unsigned char dc);
  10          void ClosePWM();
  11          
  12          void main()
  13          {
  14   1          unsigned int i;
  15   1          
  16   1          EA = 1;     //开总中断
  17   1           
  18   1          while (1)
  19   1          {
  20   2              ConfigPWM(50, 10);    //频率50Hz，占空比10%
  21   2              for (i=0; i<40000; i++);
  22   2              ClosePWM();
  23   2      
  24   2              ConfigPWM(50, 40);    //频率50Hz，占空比40%
  25   2              for (i=0; i<40000; i++);
  26   2              ClosePWM();
  27   2      
  28   2              ConfigPWM(50, 90);    //频率50Hz，占空比90%
  29   2              for (i=0; i<40000; i++);
  30   2              ClosePWM();            //关闭PWM，相当于占空比100%
  31   2      
  32   2              for (i=0; i<40000; i++);
  33   2          }
  34   1      }
  35          void ConfigPWM(unsigned int fr, unsigned char dc)
  36          {
  37   1              unsigned long tmp;
  38   1              unsigned int high, low;
  39   1      
  40   1              tmp = 11059200/12/fr;  //实际计数值20ms周期
  41   1              high = (tmp*dc)/100;  //高电平周期时间
  42   1              low = tmp - high;         //低电平周期时间
  43   1              high = 65536 - high + 12; //高电平初值
  44   1              low = 65536 - low + 12;   //低电平初值
  45   1              HighRH = (unsigned char)(high >>8);     //相当于除以256
  46   1              HighRL = (unsigned char)high; //剩余
  47   1              LowRH = (unsigned char)(low >> 8); //相当于除以256
  48   1              LowRL = (unsigned char)low;     //剩余
  49   1              TMOD &= 0xF0;   //选择工作方式1
  50   1              TMOD |= 0x01;
  51   1              TH0 = HighRH;   //初值
  52   1              TL0 = HighRL;   //初值
  53   1              ET0 = 1;                //开中断定时器0
  54   1              TR0 = 1;                //打开定时器0
  55   1              PWMOUT = 1;
C51 COMPILER V9.00   MG995                                                                 01/26/2017 13:12:07 PAGE 2   

  56   1              
  57   1      }
  58          void ClosePWM()
  59          {
  60   1              TR0 = 0;          //关定时器
  61   1              ET0 = 0;          //关定时器中断
  62   1              PWMOUT = 1;
  63   1      }
  64          void InterruptTimer0() interrupt 1
  65          {
  66   1          if (PWMOUT == 1)  //当前输出为高电平时，装载低电平值并输出低电平
  67   1          {
  68   2              TH0 = LowRH;
  69   2              TL0 = LowRL;
  70   2              PWMOUT = 0;
  71   2          }
  72   1          else              //当前输出为低电平时，装载高电平值并输出高电平
  73   1          {
  74   2              TH0 = HighRH;
  75   2              TL0 = HighRL;
  76   2              PWMOUT = 1;
  77   2          }
  78   1      }
  79          
  80          
  81          
  82          ///*
  83          //单片机控制舵机，让舵机到中间位置后，左转15度，延迟2ms,右转15度。
  84          //舵机为0.5~2.5ms，晶振12M。
  85          //*/
  86          //#include<reg52.h>
  87          //#include<intrins.h>
  88          //#define uchar unsigned char
  89          //#define uint  unsigned int
  90          //uint pwm;
  91          //uchar flag;
  92          //sbit P11=P1^1;
  93          //
  94          ///*    名称：定时器初始化
  95          //    功能：20ms定时，11.0592M晶振
  96          //      20ms初值=65536-11059200*0.02/12=65536-18432=47104=0xB800
  97          //      TH0=B8
  98          //      TL0=00         
  99          //      0.1ms初值=65536-11059200*0.0001/12=65536-92.16=6443=0xFFA3
 100          //*/
 101          //void Timer0Init()//定时器0初始化 
 102          //{
 103          //  P11=1;         //先是高电平
 104          //  TMOD=0x01;   //定时器的工作方式1
 105          //  pwm=1500;     //1.5ms高电平时是0度
 106          //  TH0=pwm/256;//初值
 107          //  TL0=pwm%256; //初值
 108          //  EA=1;                //开总中断
 109          //  ET0=1;       //定时器0中断允许
 110          //  TR0=1;       //启动定时器0
 111          //}
 112          //
 113          //void Timer1Init()//定时器1初始化 2ms  11.0592晶振
 114          //{
 115          // TMOD=0x01;    //设置定时器1为工作方式1
 116          // TH1=0xCD;     //装初值
 117          // TL1=0xF8;     //装初值
C51 COMPILER V9.00   MG995                                                                 01/26/2017 13:12:07 PAGE 3   

 118          // EA=1;                 //开总中断
 119          // ET1=1;      //定时器1中断允许
 120          // TR1=1;      //启动定时器1
 121          //}
 122          //
 123          //
 124          //
 125          //void main()
 126          //{      
 127          //   Timer0Init();
 128          //   Timer1Init();
 129          //      while(1);
 130          //}
 131          //
 132          //
 133          //void timer0()interrupt 1 using 1       //完成剩余20MS周期内的低电平
 134          //{
 135          //  P11=!P11;                           //反转
 136          //  pwm=20000-pwm;              //周期20ms
 137          //  TH0=pwm/256;                        //剩余是周期内的低电平
 138          //  TL0=pwm%256;                        //初值
 139          //}
 140          //
 141          //void timer1()interrupt 3 using 1        //进入1.75MS的高电平
 142          //{
 143          // ET1=0;        //2ms后关闭定时器1中断
 144          // ET0=0;       //关定时器0
 145          // pwm=1750;    //1.75ms高电平时是右转15度
 146          // TH0=pwm/256;  //装初值
 147          // TL0=pwm%256;  //装初值
 148          // ET0=1;       // 打开定时器0中断
 149          // TR0=1;       //开启定时器0
 150          //}
 151          //
 152          //
 153          //
 154          
 155          
 156          
 157          
 158          // void Delay10000ms()          //@11.0592MHz
 159          //{
 160          //      unsigned char i, j, k;
 161          //
 162          //      _nop_();
 163          //      i = 71;
 164          //      j = 10;
 165          //      k = 171;
 166          //      do
 167          //      {
 168          //              do
 169          //              {
 170          //                      while (--k);
 171          //              } while (--j);
 172          //      } while (--i);
 173          //}
 174          //
 175          //  void Delay1500us()          //@11.0592MHz
 176          //{
 177          //      unsigned char i, j;
 178          //
 179          //      i = 3;
C51 COMPILER V9.00   MG995                                                                 01/26/2017 13:12:07 PAGE 4   

 180          //      j = 173;
 181          //      do
 182          //      {
 183          //              while (--j);
 184          //      } while (--i);
 185          //}
 186          //
 187          //void Delay18500us()           //@11.0592MHz
 188          //{
 189          //      unsigned char i, j;
 190          //
 191          //      _nop_();
 192          //      i = 34;
 193          //      j = 39;
 194          //      do
 195          //      {
 196          //              while (--j);
 197          //      } while (--i);
 198          //}
 199          //
 200          //void Delay2000us()            //@11.0592MHz
 201          //{
 202          //      unsigned char i, j;
 203          //
 204          //      _nop_();
 205          //      i = 4;
 206          //      j = 146;
 207          //      do
 208          //      {
 209          //              while (--j);
 210          //      } while (--i);
 211          //}
 212          // 
 213          //void Delay18000us()           //@11.0592MHz
 214          //{
 215          //      unsigned char i, j;
 216          //
 217          //      i = 33;
 218          //      j = 66;
 219          //      do
 220          //      {
 221          //              while (--j);
 222          //      } while (--i);
 223          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    273    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
